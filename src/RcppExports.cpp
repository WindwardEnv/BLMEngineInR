// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// CppCalcSpecConc
std::vector<double> CppCalcSpecConc(std::vector<double> CConc, std::vector<double> K, Rcpp::IntegerMatrix Stoich, unsigned int NComp, unsigned int NSpec);
RcppExport SEXP _BLMEngineInR_CppCalcSpecConc(SEXP CConcSEXP, SEXP KSEXP, SEXP StoichSEXP, SEXP NCompSEXP, SEXP NSpecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type CConc(CConcSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type K(KSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type Stoich(StoichSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type NComp(NCompSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type NSpec(NSpecSEXP);
    rcpp_result_gen = Rcpp::wrap(CppCalcSpecConc(CConc, K, Stoich, NComp, NSpec));
    return rcpp_result_gen;
END_RCPP
}
// CppCalcLogSpecConc
std::vector<double> CppCalcLogSpecConc(std::vector<double> LogCConc, std::vector<double> LogK, Rcpp::IntegerMatrix Stoich, unsigned int NComp, unsigned int NSpec);
RcppExport SEXP _BLMEngineInR_CppCalcLogSpecConc(SEXP LogCConcSEXP, SEXP LogKSEXP, SEXP StoichSEXP, SEXP NCompSEXP, SEXP NSpecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type LogCConc(LogCConcSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type LogK(LogKSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type Stoich(StoichSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type NComp(NCompSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type NSpec(NSpecSEXP);
    rcpp_result_gen = Rcpp::wrap(CppCalcLogSpecConc(LogCConc, LogK, Stoich, NComp, NSpec));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BLMEngineInR_CppCalcSpecConc", (DL_FUNC) &_BLMEngineInR_CppCalcSpecConc, 5},
    {"_BLMEngineInR_CppCalcLogSpecConc", (DL_FUNC) &_BLMEngineInR_CppCalcLogSpecConc, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_BLMEngineInR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
